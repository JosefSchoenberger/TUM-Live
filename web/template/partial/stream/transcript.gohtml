{{define "transcript-modal"}}
    <div x-data="{ transcriptController: new watch.TranscriptController(), isOutOfSync: false, showScrollUp: false }"
         class="relative h-full border rounded-lg dark:border-gray-800 flex flex-col items-center justify-center overflow-hidden">
        <div class="h-full w-full max-w-3xl flex flex-col">
            <div class="flex justify-between items-end p-4">
                <div class="flex items-center space-x-2">
                    <h3 class="font-bold text-sm md:text-xl text-3">Transcript</h3>
                    <span class="text-xs font-semibold text-white bg-red-500 rounded-full px-2 py-1 italic">beta</span>
                </div>
                <button type="button" title="Download transcript file"
                        class="text-3 text-xs md:text-sm font-semibold hover:bg-gray-100 dark:hover:bg-gray-600 rounded-full px-2 py-1"
                        @click="transcriptController.downloadTranscript()">
                    Export transcript
                </button>
            </div>
            <div class="flex-grow overflow-hidden relative">
                {{template "transcript-list"}}
            </div>
        </div>
    </div>
{{end}}

{{define "transcript-list"}}
    <div x-cloak
         x-data="{ transcriptController: new watch.TranscriptController(), transcript: [] }"
         x-init="() => { transcriptController.init('transcript-list', $el); }"
         @update="(e) => (transcript = e.detail)"
         class="h-full w-full max-w-3xl mx-auto transcript-container overflow-hidden">
        <div class="relative grid gap-1 overflow-y-auto pr-3 h-full">
            <template x-for="(cue, index) in transcript" :key="index">
                <div class="flex items-start space-x-2 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 p-2 rounded"
                     @click="watch.jumpTo({ Ms: cue.startTime * 1000 }, true);" :data-cue-start="cue.startTime">
                    <div class="text-xs text-gray-500 dark:text-gray-400 mt-1">
                        <span x-text="new Date(cue.startTime * 1000).toISOString().substr(11, 8)"></span>
                    </div>
                    <div class="text-sm text-gray-900 dark:text-gray-100">
                        <span x-text="cue.text"></span>
                    </div>
                </div>
            </template>
        </div>
    </div>
{{end}}